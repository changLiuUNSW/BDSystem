<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ResourceMetadata.API</name>
    </assembly>
    <members>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.App_Start.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:ResourceMetadata.API.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:ResourceMetadata.API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:ResourceMetadata.API.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:ResourceMetadata.API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:ResourceMetadata.API.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,ResourceMetadata.API.Areas.HelpPage.SampleGeneration.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,ResourceMetadata.API.Areas.HelpPage.SampleGeneration.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.DefaultSampleObjectFactory(ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.ObjectGenerator"/>) and other
            factories in <see cref="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},ResourceMetadata.API.Areas.HelpPage.SampleGeneration.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.#ctor(ResourceMetadata.API.Areas.HelpPage.SampleGeneration.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey"/> based on <see cref="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,ResourceMetadata.API.Areas.HelpPage.SampleGeneration.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey"/> based on media type, <see cref="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.SampleGeneration.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ResourceMetadata.API.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:ResourceMetadata.API.ApplicationDependency">
            <summary>
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.ApplicationDependency.Register(Autofac.ContainerBuilder)">
            <summary>
            </summary>
            <param name="containerBuilder"></param>
        </member>
        <member name="T:ResourceMetadata.API.Controllers.ContactPersonController">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactPersonController.#ctor(DateAccess.Services.ContactService.IContactPersonService)">
            <summary>
            
            </summary>
            <param name="contactPersonService"></param>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactPersonController.Get(System.Int32)">
            <summary>
            api/contactperson/id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactPersonController.UpdatePersonForContact(System.Collections.Generic.List{DateAccess.Services.ContactService.UpdatePersonModel})">
            <summary>
            update contact person to contact
            </summary>
            <param name="contacts"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactPersonController.PostContactPerson(DataAccess.EntityFramework.Models.BD.Contact.ContactPerson)">
            <summary>
            create a new contact person
            </summary>
            <param name="contactPerson"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactPersonController.PutContactPerson(DataAccess.EntityFramework.Models.BD.Contact.ContactPerson)">
            <summary>
            update contact person
            </summary>
            <param name="contactPerson"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactPersonController.DeleteContactPerson(System.Int32)">
            <summary>
            delete the contact person
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactPersonController.GetPersonHistory(System.String,System.Nullable{System.Int32})">
            <summary>
            get update history of the contact person
            </summary>
            <param name="reason"></param>
            <param name="personId"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactPersonController.DeletePersonHistory(System.Int32[])">
            <summary>
            delete update history of the contact person
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactPersonController.HistoryChangeToNewManager(System.Collections.Generic.List{System.Int32})">
            <summary>
            
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactPersonController.GetAllNameCorrectHistory">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactPersonController.PutPending(System.Collections.Generic.IList{DateAccess.Services.ViewModels.PendingChange})">
            <summary>
            update contact person at the same time move the original contact person to the history table
            </summary>
            <returns></returns>
        </member>
        <member name="T:ResourceMetadata.API.Controllers.LeadPersonalController">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadPersonalController.#ctor(DateAccess.Services.ContactService.ILeadPersonalService)">
            <summary>
            
            </summary>
            <param name="leadPersonalService"></param>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadPersonalController.Get(System.Boolean)">
            <summary>
            get all qp lead priority
            </summary>
            <param name="stats">include contact statistics for each qp</param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadPersonalController.GetName">
            <summary>
            return name and id of lead personals
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadPersonalController.Get(System.Int32,System.Boolean)">
            <summary>
            return a single lead priority person
            </summary>
            <param name="id"></param>
            <param name="getStats"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadPersonalController.Put(DataAccess.EntityFramework.Models.BD.Lead.LeadPersonal)">
            <summary>
            update the qp lead priority
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadPersonalController.Put(System.Collections.Generic.IList{DataAccess.EntityFramework.Models.BD.Lead.LeadPersonal})">
            <summary>
            update a list of qp lead priority
            </summary>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadPersonalController.Post(DataAccess.EntityFramework.Models.BD.Lead.LeadPersonal)">
            <summary>
            create a new qp lead priority
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadPersonalController.Delete(System.Int32)">
            <summary>
            delete the qp lead priority
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadPersonalController.GetShift">
            <summary>
            get lead shift information
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadPersonalController.PutShift(DataAccess.EntityFramework.Models.BD.Lead.LeadShiftInfo)">
            <summary>
            update lead shift information
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.QuoteCostController.GetEquipment">
            <summary>
            get all available equipments for cost estimation
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.QuoteCostController.GetCost(System.Int32)">
            <summary>
            for test only
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ResourceMetadata.API.Controllers.SearchController">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SearchController.#ctor(DateAccess.Services.SearchService.ISearchService)">
            <summary>
                default constructor
            </summary>
            <param name="searchService"></param>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SearchController.SearchPerson(DataAccess.Common.SearchModels.Search)">
            <summary>
            SearchPerson
            </summary>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SearchController.SearchSite(DataAccess.Common.SearchModels.Search)">
            <summary>
            SearchSite
            </summary>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="T:ResourceMetadata.API.Controllers.SiteGroupController">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SiteGroupController.#ctor(DateAccess.Services.SiteService.ISiteGroupService)">
            <summary>
            default constructor
            </summary>
            <param name="siteGroupService"></param>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SiteGroupController.Get(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SiteGroupController.Post(DataAccess.EntityFramework.Models.BD.Site.SiteGroup)">
            <summary>
            
            </summary>
            <param name="siteGroup"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SiteGroupController.Put(DataAccess.EntityFramework.Models.BD.Site.SiteGroup)">
            <summary>
            
            </summary>
            <param name="siteGroup"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SiteGroupController.SearchSiteGroup(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:ResourceMetadata.API.DependencyConfigure">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.DependencyConfigure.Init(Autofac.ContainerBuilder)">
            <summary>
            
            </summary>
            <param name="containerBuilder"></param>
        </member>
        <member name="T:ResourceMetadata.API.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Startup.Configuration(Owin.IAppBuilder)">
            <summary>
            
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:ResourceMetadata.API.WebApiConfig">
            <summary>
            web route config
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Controllers.AllocationController">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.AllocationController.#ctor(DateAccess.Services.ContactService.IAllocationService)">
            <summary>
            
            </summary>
            <param name="allocationService"></param>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.AllocationController.PostAllocation(DataAccess.EntityFramework.Models.BD.Allocation.Allocation)">
            <summary>
            post api/allocation
            </summary>
            <param name="allocation"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.AllocationController.PutAllocation(DataAccess.EntityFramework.Models.BD.Allocation.Allocation)">
            <summary>
            put api/allocation
            </summary>
            <param name="allocation"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.AllocationController.DeleteAllocation(System.Int32)">
            <summary>
            delete api/allocation
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.AllocationController.GetAllocation">
            <summary>
            get api/allocation
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.AllocationController.GetIdleZones">
            <summary>
            return list of zone/size that have not been assigned to anyone
            </summary>
            <returns></returns>
        </member>
        <member name="T:ResourceMetadata.API.Controllers.LeadController">
            <summary>
                Data for workbook
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadController.#ctor(DateAccess.Services.ContactService.ILeadService)">
            <summary>
                default constructor
            </summary>
            <param name="leadService"></param>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadController.GetAll">
            <summary>
                get all leads
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadController.Get(System.Int32)">
            <summary>
                get specified lead with lead id
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadController.PostLead(DataAccess.EntityFramework.Models.BD.Lead.Lead)">
            <summary>
                create a new lead
            </summary>
            <param name="lead"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.LeadController.DeleteLead(System.Int32)">
            <summary>
                delete the lead
            </summary>
            <returns></returns>
        </member>
        <member name="T:ResourceMetadata.API.Controllers.ContactController">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactController.#ctor(DateAccess.Services.ContactService.IContactService,DateAccess.Services.ContactService.Call.ICallService)">
            <summary>
            default constructor
            </summary>
            <param name="callService"></param>
            <param name="contactService"></param>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactController.Get(System.Int32)">
            <summary>
            get a single contact by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactController.GetNext(DataAccess.EntityFramework.TypeLibrary.CallTypes,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            return next avaiable contact base on the underlying provider configuration
            </summary>
            <param name="type">type of provider to use</param>
            <param name="initial">if initial is supplied and siteId is not, provider will use initial to find next call</param>
            <param name="siteId">if siteId is supplied, provider will use siteId to find next call and ignoring the value in initial</param>
            <param name="lastCallId">if lastCallId is supplied, it will be removed from the occupied call list prior to finding the next call</param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactController.GetReport(DateAccess.Services.ContactService.Reports.Config.ReportType)">
            <summary>
            get contact summary
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactController.GetReportHistory(DateAccess.Services.ContactService.Reports.Config.ReportType)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactController.GetQpPriority">
            <summary>
            get contact call priority
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactController.PutNote(System.Int32,System.String)">
            <summary>
             update single field of the contact
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactController.DeleteCallLine(System.Int32,System.Int32)">
            <summary>
            delete a call line from the contact
            </summary>
            <param name="contactId"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactController.PostCallLine(System.Int32,DataAccess.EntityFramework.Models.BD.Site.CallLine)">
            <summary>
            add a new contact line to the contact
            </summary>
            <param name="contactId"></param>
            <param name="callLine"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactController.PutAssignContactPerson(System.Int32,System.Int32,System.Int32,DataAccess.EntityFramework.TypeLibrary.BusinessTypes)">
            <summary>
            assign contactperson to the contact
            </summary>
            <param name="contactId"></param>
            <param name="contactPersonId"></param>
            <param name="targetContactId"></param>
            <param name="type">business if new contact needs to be created</param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.ContactController.PutEndCall(System.Int32,Newtonsoft.Json.Linq.JObject)">
            <summary>
            end a call by updating next call date and relavent information
            </summary>
            <returns></returns>
        </member>
        <member name="T:ResourceMetadata.API.Controllers.HomeController">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.HomeController.Index">
            <summary>
            Get home
            </summary>
            <returns></returns>
        </member>
        <member name="T:ResourceMetadata.API.Controllers.QuoteController">
            <summary>
            quote specific operation
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.QuoteController.#ctor(DateAccess.Services.QuoteService.IQuoteService,DataAccess.Common.ApplicationSettings)">
            <summary>
                default constructor
            </summary>
            <param name="quoteService"></param>
            <param name="settings"></param>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.QuoteController.Get(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ResourceMetadata.API.Controllers.SiteController">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SiteController.#ctor(DateAccess.Services.SiteService.ISiteService,DataAccess.EntityFramework.IUnitOfWork)">
            <summary>
            default constructor
            </summary>
            <param name="siteService"></param>
            <param name="unitOfWork"></param>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SiteController.Get(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SiteController.QueryGroupManager(System.Collections.Generic.IList{DataAccess.Common.SearchModels.SearchField})">
            <summary>
            query gorup manager
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SiteController.Get(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:ResourceMetadata.API.Controllers.TelesaleController">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.TelesaleController.#ctor(DateAccess.Services.ContactService.ITelesaleService)">
            <summary>
            
            </summary>
            <param name="telesaleService"></param>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.TelesaleController.Get">
            <summary>
            get all telesales
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.TelesaleController.Assign(System.Int32,DataAccess.EntityFramework.Models.BD.Telesale.Assignment)">
            <summary>
            assign a call asignment to telesale
            </summary>
            <param name="assignment"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.TelesaleController.DeAssign(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            remove call assignment from telelsale
            </summary>
            <param name="tsId"></param>
            <param name="id">assignment id</param>
            <param name="code"></param>
            <param name="area"></param>
            <returns></returns>
        </member>
        <member name="T:ResourceMetadata.API.Controllers.SalesBoxController">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SalesBoxController.#ctor(DateAccess.Services.ContactService.IAreaService)">
            <summary>
            
            </summary>
            <param name="areaService"></param>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SalesBoxController.GetState">
            <summary>
            return all unique states
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SalesBoxController.GetZone">
            <summary>
            return all unique zones
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SalesBoxController.GetZoneAllocation">
            <summary>
            return zone with their respective allocation if any
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SalesBoxController.Post(DataAccess.EntityFramework.Models.BD.Allocation.SalesBox)">
            <summary>
            add a new salesbox
            </summary>
            <param name="salesBox"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SalesBoxController.Delete(System.String,System.String)">
            <summary>
            delete the salesbox
            </summary>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SalesBoxController.Put(DataAccess.EntityFramework.Models.BD.Allocation.SalesBox)">
            <summary>
            update a single salesboxes
            </summary>
            <param name="salesBox"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SalesBoxController.Get(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            return salesboxes base on the query parameter provided
            </summary>
            <param name="postCode"></param>
            <param name="state"></param>
            <param name="take"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Controllers.SalesBoxController.Get(System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <param name="pageSize"></param>
            <param name="postcode"></param>
            <returns></returns>
        </member>
        <member name="T:ResourceMetadata.API.Json.CustomJsonResolver">
            <summary>
            custom json conversion for contact
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Json.CustomJsonResolver.IgnoreList">
            <summary>
            list of ignore property when serializing json
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Json.CustomJsonConverter">
            <summary>
            provide custom json serialization
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Json.CustomJsonConverter.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Json.CustomJsonConverter.#ctor(Newtonsoft.Json.Serialization.IContractResolver)">
            <summary>
            default constructor with contract resolver
            </summary>
            <param name="resolver"></param>
        </member>
        <member name="M:ResourceMetadata.API.Json.CustomJsonConverter.Resolve(System.Object)">
            <summary>
            resolve the object using set contract resolver and jsonSerializerSettings to JObject
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:ResourceMetadata.API.Json.CustomJsonConverter.ContactResolver">
            <summary>
            default contact resolver for json serializer
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Json.CustomJsonConverter.JsonSerializerSettings">
            <summary>
            default settings
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Json.TelesaleContactJsonConverter">
            <summary>
            json serialization for contact from telesale call
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Json.TelesaleContactJsonConverter.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="P:ResourceMetadata.API.Json.TelesaleContactJsonConverter.IgnoreList">
            <summary>
            list of ignore property when serializing json
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Models.Response`1">
            <summary>
            standard api response class
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:ResourceMetadata.API.Models.ErrorResponse">
            <summary>
            standard api error response class     
            </summary>
        </member>
        <member name="T:ResourceMetadata.API.Providers.ApplicationOAuthProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:ResourceMetadata.API.Providers.ApplicationOAuthProvider.ValidateClientAuthentication(Microsoft.Owin.Security.OAuth.OAuthValidateClientAuthenticationContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Providers.ApplicationOAuthProvider.GrantResourceOwnerCredentials(Microsoft.Owin.Security.OAuth.OAuthGrantResourceOwnerCredentialsContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Providers.ApplicationOAuthProvider.CreateProperties(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="userName"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:ResourceMetadata.API.Providers.ApplicationOAuthProvider.TokenEndpoint(Microsoft.Owin.Security.OAuth.OAuthTokenEndpointContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
    </members>
</doc>
